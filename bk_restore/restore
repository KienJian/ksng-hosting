#!/bin/bash

func_usage()
{
  echo " Usage: $0 -u user -d domain -t time "
  exit 1
}
while getopts u:d:t: OPT
	do
		case $OPT in
		"u" ) _USER="$OPTARG" ;;
		"d" ) _DOMA="$OPTARG" ;;
		"t" ) _TIME="$OPTARG" ;;
		* ) func_usage ;;
		esac
	done
if [ -z ${_USER} ] || [ -z ${_DOMA} ] || [ -z ${_TIME} ]; then
    func_usage
fi

w3-date ()
{
declare -A arrayDate
arrayDate=( ["Jan"]=01 ["Feb"]=02 ["Mar"]=03 ["Apr"]=04 ["May"]=05 ["Jun"]=06 ["Jul"]=07 ["Aug"]=08 ["Sep"]=09 ["Oct"]=10 ["Nov"]=11 ["Dec"]=12 )
time_in_day=`echo $1 |cut -d '-' -f2`
hour=`echo ${time_in_day} | cut -d ':' -f1`
[ $hour -lt 10 ] && [ $hour -gt 0 ] && hour="0"$hour
minute=`echo ${time_in_day} | cut -d ':' -f2`
second=`echo ${time_in_day} | cut -d ':' -f3`
time_in_day=$hour":"$minute":"$second
mon=`echo $1 |cut -d '-' -f1| cut -d '/' -f2`
mon=${arrayDate[$mon]}
year=`echo $1 |cut -d '-' -f1| cut -d '/' -f1`
day=`echo $1 |cut -d '-' -f1| cut -d '/' -f3`
[ $day -lt 10 ] && day="0"$day
echo $year"-"$mon"-"$day"T"$time_in_day"+07:00"
}

w3date=$(w3-date ${_TIME})
## restore source code
src_dir="/home/${_USER}/${_DOMA}/"
dest_url="swift://vod/backup/${_USER}/${_DOMA}"
log_archive="/var/log/${_DOMA}/rest.log"
source /root/dup_swift
today=`date +%Y-%m-%d-%H:%M:%S`
echo $today >> $log_archive
duplicity --time=${w3date} --no-encryption $dest_url $src_dir --force >> $log_archive

## restore db (overwrite)
db=`grep ${_DOMA} /etc/kusanagi.d/profile.conf -A 1 | grep DBNAME | cut -d '"' -f2`
sql_dir="/home/${_USER}/${_DOMA}/sqlbackup"
#mysql  -pPassword -e "drop database if exists $db"
#mysql  -pPassword -e "create database $db"
if [ -f $sql_dir/$db".sql.gz" ]; then
	gunzip < $sql_dir/$db".sql.gz" | mysql  -pPassword $db 
	echo $?
else
	echo $db".sql.gz does NOT exist"
	echo 1
fi

